# Makefile for RHEL8 PPC LE

# Installation target
INSTALLDIR = /cs/opt/env/bin/power8/afni
LIBDIR = $(INSTALLDIR)

# Choose CPU type (power8 or power9)
CPU = power8

# Library specs
USE_ZLIB = -DHAVE_ZLIB
LZLIB    = -lz
USE_GIFTI = -DHAVE_GIFTI
LGIFTI    = /lib64/libexpat.so

# Compiler flags
CCDEBS = -DAFNI_DEBUG -DIMSEQ_DEBUG -DDISPLAY_DEBUG -DTHD_DEBUG
CEXTRA = -Wcomment -Wformat -DUSE_TRACING -DHAVE_XDBE \
	 -DDONT_USE_XTDESTROY -D_GNU_SOURCE -DREPLACE_XT -DNO_WARN_X86_INTRINSICS
CPERF  = -ffast-math -fpeel-loops -funroll-loops -fvect-cost-model -mcmodel=medium
CARCH  = -m64 -fPIC -mcpu=$(CPU) -mtune=$(CPU) 
CC     = gcc -O3 $(CPERF) $(CARCH) -DREAD_WRITE_64 -DLINUX2 $(CEXTRA)
CCVOL  = gcc -O3 $(CPERF) $(CARCH) -DREAD_WRITE_64 -DLINUX2 $(CEXTRA)
CCMIN  = gcc -m64 -fPIC
CCD    = $(CC) $(CCDEBS)
CCOLD  = $(CC)
CCSVD  = gcc -O0 -m64 -fPIC

# OpenMP and loop-parallelization 
CCFAST = $(CC)
OMPFLAG = -fopenmp -ftree-parallelize-loops=4 -DUSE_OMP

# Include flags
IFLAGS = -I. -I/usr/include
LFLAGS = -L. -L/lib64 -L/usr/lib64

# Library flags
PLUGIN_SUFFIX = so
PLUGIN_LFLAGS = -shared -fPIC
PLUGIN_CC     = $(CC)
PLFLAGS       = -rdynamic -L. -L/lib64 -L/usr/lib64

# Who am I?
SYSTEM_NAME = linux_rhel8_ppcle
SHOWOFF = -DSHOWOFF=$(SYSTEM_NAME)

# Build and GNUtils
AR     = /usr/bin/ar
RANLIB = /usr/bin/ranlib
TAR    = /usr/bin/tar
MKDIR  = /usr/bin/mkdir
GZIP   = /usr/bin/gzip
LD     = gcc 

RM = /usr/bin/rm -f
MV = /usr/bin/mv -f
CP = /usr/bin/cp -f

# SUMA/gts settings and GSL
# INSTALL_PREREQ = suma
INSTALL_PREREQ = suma_gts
# uncomment if the Gnu Scientific Library is installed (libgsl, libgslcblas)
GSLPROGS = balloon
EXPROGS = $(GSLPROGS)

# For dynamic linking - assumes you have Motif or LessTif *.so libraries
LLIBS  = -lmri -lf2c -lXm -lXft -lXp -lXpm -lXext -lXmu -lXt -lSM -lICE -lX11 -lpng -ljpeg $(LZLIB) $(LGIFTI) -lm  -ldl -lc

# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# For suma (NO STATIC LINKING OF GL libs)
SUMA_GLIB_VER = -2.0

#use -lGLw if you have libGLw.a or libGLw.so* or 
#  -lMesaGLw if you have Mesa's version (libMesaGLw*) of libGLw
GLw_IPATH  = -IGLw_local
# GLw_LIB = libGLws.a
GLw_LIB = -lGLw
SUMA_INCLUDE_PATH = $(GLw_IPATH) $(IFLAGS) -I/lib64/glib-2.0/include -I/usr/include/glib-2.0 -I.. -I../niml -Igts/src 
SUMA_LINK_PATH = -L.. $(LFLAGS)
#use -lGLw if you have libGLw.a or libGLw.so* or 
#  -lMesaGLw if you have Mesa's version (libMesaGLw*) of libGLw
SUMA_LINK_LIB = $(GLw_LIB) -lGLU -lGL $(LLIBS)
SUMA_MAKEFILE_NAME = SUMA_Makefile
SUMA_BIN_ARCHIVE = SUMA_Linux_ppc.tar
SUMA_MDEFS = -DSUMA_GL_NO_CHECK_FRAME_BUFFER
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

MAKE = make
include Makefile.INCLUDE
