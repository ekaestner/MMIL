function M_T1_to_T2 = mmil_jpdfreg_T1T2(fname_T1,fname_T2,varargin)
%function M_T1_to_T2 = mmil_jpdfreg_T1T2(fname_T1,fname_T2,[options])
%
% Purpose: perform rigid body registration between
%   T2-weighted and T1-weighted MRI volumes (uses Dominic Holland's reg)
%
% Usage: mmil_jpdfreg_T2T1(fname_T2,fname_T1,'key1',val1,...)
%
% Required Input:
%   fname_T1: full path file name of T1-weighted volume (mgh/mgz format)
%   fname_T2: full path file name of T2-weighted volume (mgh/mgz format)
%
% Optional Input:
%   'T1T2regtype': registration in atlas (0) or subject (1) space
%    {default = 1}
%   'outdir': output path for files generated by reg
%     {default = pwd}
%   'fname_T1_mask': full path of brain mask for T1-weighted volume
%     If not supplied, will create the T1 mask using mmil_dct_brainmask
%     {default = []}
%   'paramfile': full or relative path of parameter file
%     If relative, relative to $MMPS_PARMS/REG
%     {default = []}
%   'binfile': full or relative path of reg binary file
%     {default = 'reg'}
%   'logfile': file name of output log file
%     If relative, relative to outdir
%     {default = 'reg.log'}
%   'atlasdir': full path of atlas directory
%     {default =  [getenv('MMPS_DIR') '/atlases']}}
%   'atlasname': name of atlas file (omit .mat extension)
%     full path or relative to atlasdir
%     {default =  'T1_Atlas/T1_atlas'}
%   'cleanup_flag': [0|1] removes files created by mmil_reg to correct 
%     for residual translation {default = 1}
%   'forceflag': [0|1] overwrite existing output files
%     {default = 0}
% 
% Created:  10/23/11 by Vijay Venkatraman (Original Code from Don Hagler)
% Prev Mod: 04/26/17 by Don Hagler
% Last Mod: 05/11/17 by Don Hagler
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parse input parameters

M_T1_to_T2 = [];
if ~mmil_check_nargs(nargin,2), return; end;
parms = mmil_args2parms(varargin, { ...
  'fname_T1',fname_T1,[],...
  'fname_T2',fname_T2,[],...
  'outdir',pwd,[],...
  'fname_T1_mask',[],[],...
  'paramfile',[],[],...
  'binfile','reg',[],...
  'logfile','reg.log',[],...
  'forceflag',false,[false true],...
...
  'atlasdir',[],[],...
  'atlasname','T1_Atlas/T1_atlas',[],...  
  'bindir',[],[],...
  'parmsdir',[],[],...
  'sincflag',true,[false true],...
  'interpm',2,[1:5],...
  'cleanup_flag',true,[false true],...
...
  'smoothmask_flag',true,[false,true],...
  'thresh0',0.01,[0,1000],...
  'smooth1',20,[0,100],...
  'thresh1',0.25,[0,1],...
  'smooth2',10,[0,100],...
  'thresh2',0.5,[0,1],...
  'smooth3',5,[0,100],...
  'thresh3',0.01,[0,1],...
  'T1T2regtype',true,[false true]...
});

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

tags = {'fname_T1','fname_T2','outdir','fname_T1_mask','paramfile','binfile',...
  'logfile','forceflag','atlasdir','atlasname','bindir','parmsdir','sincflag',...
  'interpm','cleanup_flag','smoothmask_flag',...
  'thresh0','smooth1','thresh1','smooth2','thresh2','smooth3','thresh3'};
args = mmil_parms2args(parms,tags);  

if parms.T1T2regtype
  M_T1_to_T2 = mmil_jpdfreg2subj_T1T2(fname_T1,fname_T2,args{:});
else
  M_T1_to_T2 = mmil_jpdfreg2atl_T1T2(fname_T1,fname_T2,args{:});
end;

