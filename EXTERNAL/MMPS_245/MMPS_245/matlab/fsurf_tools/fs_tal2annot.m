function [fnames_annot,fnames_label] = fs_tal2annot(fname_points,varargin)
%function [fnames_annot,fnames_label] = fs_tal2annot(fname_points,[options])
%
% Purpose: resample a directory of labels into an annotation file
%
% Required Input:
%   fname_points: csv file containing Talairach coordinates
%     with column headers: 'roiname', 'hemi', 'x', 'y', 'z'
%     hemi must be 'lh', or 'rh'
%     additional columns will be ignored
%     
% Optional Input:
%   'labeldir': directory for label files to be created
%     {default = [pwd '/labels']}
%   'outdir': output directory for annotation files
%     {default = [pwd '/annot']}
%   'MNIflag': [0|1] whether coordinates are MNI or "true" Talairach
%     {default = 1}
%   'vol_sm': smoothing sigma in volume
%     {default = 0}
%   'surf_sm': number of smoothing iterations on surface
%     {default = 50}
%   'thresh': threshold applied after smoothing
%     {default = 0.1}
%   'fname_ctab': name of color table file with roi names in fname_points
%      if empty or does not exist, will create ctab file with random colors
%     {default = []}
%   'source_subj': FreeSurfer subject from whom labels will be made
%     {default = 'fsaverage'}
%   'subj': FreeSurfer subject for whom annotation will be made
%     {default = 'fsaverage'}
%   'subjdir': FreeSurfer subject root directory
%     {default = $FREESURFER_HOME/subjects}
%   'verbose': [0|1] display status messages
%     {default = 1}
%   'forceflag': [0|1] overwrite existing output
%     {default = 0}
%
% Output:
%   fnames_annot: cell array of filenames for left and right hemispheres
%   fnames_label: cell array of filesnames
%
% Created:  11/03/11 by Don Hagler
% Last Mod: 09/05/12 by Don Hagler
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if ~mmil_check_nargs(nargin,1), return; end;
parms = mmil_args2parms(varargin,{...
  'labeldir',[pwd '/labels'],[],...
... % for fs_tal2labels
  'MNIflag',true,[false true],...
  'vol_sm',0,[0,1000],...
  'surf_sm',50,[0,1000],...
  'thresh',0.1,[0,1],...
... % for fs_labels2annot
  'outdir',[pwd '/annot'],[],...
  'source_subj','fsaverage',[],...
  'fname_ctab',[],[],...
  'subj','fsaverage',[],...
  'subjdir',[],[],...
  'annotname','fparc',[],...
  'ico',7,[0:7],...
  'verbose',true,[false true],...
  'forceflag',false,[false true],...
... % for both
 'hemilist',{'lh','rh'},{'lh','rh'},...
});

tags_labels = {...
  'MNIflag'...
  'vol_sm'...
  'surf_sm'...
  'thresh'...
  'hemilist'...
  'verbose'...
  'forceflag'...
};

tags_annot = {...
  'indir'...
  'outdir'...
  'source_subj'...
  'fname_ctab'...
  'subj'...
  'subjdir'...
  'annotname'...
  'hemilist'...
  'verbose'...
  'forceflag'...
};

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if isempty(parms.fname_ctab)
  [tmp,fstem] = fileparts(fname_points);
  parms.fname_ctab = sprintf('%s/%s.ctab',parms.outdir,fstem);
  if exist(parms.fname_ctab,'file') && parms.forceflag
    delete(parms.fname_ctab);
  end;
end;
if ~exist(parms.fname_ctab,'file')
  mmil_mkdir(parms.outdir);
  points = mmil_csv2struct(fname_points);
  if ~isfield(points,'roiname')
    error('points file is missing roiname column');
  end;
  roinames = unique({points.roiname});
  fs_write_ctab(roinames,parms.fname_ctab);
end;

% run fs_tal2labels
args = mmil_parms2args(parms,tags_labels);
fnames_label = fs_tal2labels(fname_points,...
  'subj',parms.source_subj,...
  'outdir',parms.labeldir,args{:});

% run fs_labels2annot
args = mmil_parms2args(parms,tags_annot);
[fnames_annot,fnames_label] = fs_labels2annot(parms.labeldir,args{:});

