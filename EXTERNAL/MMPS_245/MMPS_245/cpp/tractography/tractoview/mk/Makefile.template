# objects to be included in the project....
SRCS = ExampleTestCase.cpp TestCase.cpp TestResult.cpp TestFailure.cpp TestSuite.cpp

# project name...
PROJECT_NAME = testmatrix

OBJDIR = .
DEPDIR = 

PATH_TO_SRCS = .:../test/framework
MK_DIR = mk

########################################################################
# system dependent stuff, that users will want to change...
# stuff that cant be abstracted in the build system...
##########################################################################
include ${MK_DIR}/mk.hosttype
# IRIX
ifeq ($(HOSTTYPE), IRIX)
   INCLUDE_PATHS =  -I. -I../test/framework
   LIBS = 
   include ${MK_DIR}/mk.irix
endif

#LiNUX
ifeq ($(HOSTTYPE), Linux)
endif

# Win32
ifeq ($(HOSTTYPE), Win32)
   INCLUDE_PATHS = -I. -I../test/framework
   LIBS = 
   DEPENDFLAGS = -D__cplusplus -D_WIN32 -DWIN32 $(INCLUDE_PATHS)
   include ${MK_DIR}/mk.win32
endif

# gnu2
ifeq ($(HOSTTYPE), GNU)
   INCLUDE_PATHS = -I. -I../test/framework
   LIBS = 
   include ${MK_DIR}/mk.gnu
endif
########################################################################

include ${MK_DIR}/mk.objs

# Compile then Link
build: $(OBJS)
	-@echo ""
	-@echo "-------------------------------------------"
	-@echo "Linking... (.$(OBJ_FILE_SUFFIX)'s --> .so)"
	-@echo "-------------------------------------------"
	$(EXE_LINKER) $(EXE_FLAGS) $(OBJS) $(OUTPUT_EXE_FLAG) $(LIBS)
	-@echo ""
	-@echo "-------------------------------------------"
	-@echo "$(FILENAME) done"
	-@echo "-------------------------------------------"

# Remove the compiled stuff from the system
clean:
	-@echo ""
	-@echo "-------------------------------------------"
	-@echo "Removing compiled stuff from the system	 "
	-@echo "-------------------------------------------"
	-rm -r $(OBJS) $(FILENAME) *.ncb *.opt *.plg *.ilk *.idb *.pdb *.pch Debug/ Release/ ii_files/



clobber: clean
	-rm *.d

include ${MK_DIR}/mk.depend
