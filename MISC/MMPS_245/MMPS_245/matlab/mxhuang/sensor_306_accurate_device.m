function [Coil,intpnt_loc,intpnt_ori]=sensor_306_accurate_device(fif_filename);

% function [Coil,intpnt_loc,int_pnt_ori]=sensor_306_accurate_device(fif_filename);
%
% SENSOR_306_ACCURATE Return the Vector-view 306 
% coil information in ACCURATE FORMAT in DEVICE coordinate system
%
% Coil: 1 by 306 structure. 
%       Coil(i).n the number of integration points in each channel
%       Coil(i).wei are the weight matrix for the all integration points in channel i; 
%       Coil(i).loc location of integration points;
%       Coil(i).ori orientation of the integration
% intpnt_loc: location of all integration points concatenated 
% intpnt_ori: orientation of all integration points concatenated

if(nargin==0),
  load sensor306_default.mat
elseif exist(fif_filename)==0
  error('Fif file does not exist')  
else
  [sensor.name,sensor.kind,sensor.logname,sensor.type,sensor.loc]=channames(fif_filename);
end

%T_device_head=loadtrans(fif_filename,'DEVICE','HEAD');
T_device_head=eye(4);
T_device_head(4,4)=0;

Coil=[];
intpnt_loc=[];
intpnt_ori=[];

for i=1:length(sensor.name),
   Trans=sensor.loc{i};
   Coil(i).name=sensor.name{i};
   if strcmp(sensor.name{i}(1:3),'MEG')==1,     % now MEG coils
       Ux=Trans(1:3,1)';
       Uy=Trans(1:3,2)';
       Uz=Trans(1:3,3)';
       Rcenter=Trans(1:3,4)';
       if sensor.type(i)==3012 | sensor.type(i)==3013,
            Coil(i).n=8;
            Coil(i).wei=diag([1 1 1 1 -1 -1 -1 -1]/(4*1.669)); % fT/cm
            Coil_loc_tmp=[(Rcenter+[5.89 6.71 0.3]*[Ux;Uy;Uz]/1000);...
         		          (Rcenter+[5.89 -6.71 0.3]*[Ux;Uy;Uz]/1000);...
             	 	      (Rcenter+[10.8 6.71 0.3]*[Ux;Uy;Uz]/1000);...
         		          (Rcenter+[10.8 -6.71 0.3]*[Ux;Uy;Uz]/1000);...
      				      (Rcenter+[-5.89 6.71 0.3]*[Ux;Uy;Uz]/1000);...
         		          (Rcenter+[-5.89 -6.71 0.3]*[Ux;Uy;Uz]/1000);...
             	 	      (Rcenter+[-10.8 6.71 0.3]*[Ux;Uy;Uz]/1000);...
         		          (Rcenter+[-10.8 -6.71 0.3]*[Ux;Uy;Uz]/1000)];
            Coil_loc_tmp=T_device_head*[Coil_loc_tmp';ones(1,8)];
            Coil(i).loc=Coil_loc_tmp(1:3,:)';
            Coil_ori_tmp=ones(8,1)*Uz;	% directions
            Coil_ori_tmp=T_device_head(1:3,1:3)*Coil_ori_tmp';
            Coil(i).ori=Coil_ori_tmp(1:3,:)';
            intpnt_loc=[intpnt_loc;Coil(i).loc];
            intpnt_ori=[intpnt_ori;Coil(i).ori];
       elseif sensor.type(i)==3022 | sensor.type(i)==3023,
            Coil(i).n=16;
		    Coil(i).wei=diag(ones(1,16))/16; % fT
            Coil_loc_tmp=[(Rcenter+[9.68 9.68 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[9.68 -9.68 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[9.68 3.23 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[9.68 -3.23 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[-9.68 9.68 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-9.68 -9.68 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[-9.68 3.23 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-9.68 -3.23 0.3]*[Ux;Uy;Uz]/1000);...
						 (Rcenter+[3.23 9.68 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[3.23 -9.68 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[3.23 3.23 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[3.23 -3.23 0.3]*[Ux;Uy;Uz]/1000);...
						 (Rcenter+[-3.23 9.68 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-3.23 -9.68 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[-3.23 3.23 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-3.23 -3.23 0.3]*[Ux;Uy;Uz]/1000)];
            Coil_loc_tmp=T_device_head*[Coil_loc_tmp';ones(1,16)];
            Coil(i).loc=Coil_loc_tmp(1:3,:)';
            Coil_ori_tmp=ones(16,1)*Uz;	% directions
            Coil_ori_tmp=T_device_head(1:3,1:3)*Coil_ori_tmp';
            Coil(i).ori=Coil_ori_tmp(1:3,:)';
            intpnt_loc=[intpnt_loc;Coil(i).loc];
            intpnt_ori=[intpnt_ori;Coil(i).ori];      
       elseif sensor.type(i)==3024, 
            Coil(i).n=16;
		    Coil(i).wei=diag(ones(1,16))/16; % fT
            Coil_loc_tmp=[(Rcenter+[7.88 7.88 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[7.88 -7.88 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[7.88 2.63 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[7.88 -2.63 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[-7.88 7.88 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-7.88 -7.88 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[-7.88 2.63 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-7.88 -2.63 0.3]*[Ux;Uy;Uz]/1000);...
						 (Rcenter+[2.63 7.88 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[2.63 -7.88 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[2.63 2.63 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[2.63 -2.63 0.3]*[Ux;Uy;Uz]/1000);...
						 (Rcenter+[-2.63 7.88 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-2.63 -7.88 0.3]*[Ux;Uy;Uz]/1000);...
                         (Rcenter+[-2.63 2.63 0.3]*[Ux;Uy;Uz]/1000);... 
                         (Rcenter+[-2.63 -2.63 0.3]*[Ux;Uy;Uz]/1000)];      
            Coil_loc_tmp=T_device_head*[Coil_loc_tmp';ones(1,16)];
            Coil(i).loc=Coil_loc_tmp(1:3,:)';
            Coil_ori_tmp=ones(16,1)*Uz;	% directions
            Coil_ori_tmp=T_device_head(1:3,1:3)*Coil_ori_tmp';
            Coil(i).ori=Coil_ori_tmp(1:3,:)';
            intpnt_loc=[intpnt_loc;Coil(i).loc];
            intpnt_ori=[intpnt_ori;Coil(i).ori]      
       end
   end
end   
     

return
